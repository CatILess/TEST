# -*- coding: utf-8 -*-

#!/usr/bin/env python


# Spider Trap


# ---- 설정 ----

# 한 페이지에 넣을 링크 수 제한 
# # 5~10 링크를 넣도록 했음
LINKS_PER_PAGE = (5, 10)

# 링크 글자 길이 제한
# # 3~20 글자로 넣도록 해씀
LENGTH_OF_LINKS = (3, 20)

# 웹서버 돌릴 포트 
PORT = 8000

# 리퀘스트 반응 텀 - dos 방지인 듯
# sleep으로 자게 함
DELAY = 350

# 랜덤 글자 생성을 위한 캐릭터들
CHAR_SPACE = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_-/'

# ____ 설정 ____


import sys
import random
import BaseHTTPServer
import time

class Handler(BaseHTTPServer.BaseHTTPRequestHandler):
  webpages = None
  

  #랜덤한 웹페이지 생성 / 현재 URL을 시드로 하여 랜덤 이용
  def generate_page(self, seed):
    """Generate a webpage containing only random links"""
    
    html = '<html>\n<body>\n'
    
    random.seed(seed)

    # 페이지에 넣을 링크 수를 랜덤하게 지정
    num_pages = random.randint(*LINKS_PER_PAGE)
    
    # 인자로 파일을 줬다면 파일에 주어진 링크 이용, 아니면 랜덤 생성
    if self.webpages is None:

      #  랜덤 링크를 생성하여 HTML에 붙임
      for i in range(num_pages):
        address = ''.join([random.choice(CHAR_SPACE) for i in range(random.randint(*LENGTH_OF_LINKS))])
        html += '<a href="' + address + '">' + address + '</a><br>\n'

    else:
      # 파일로 주어진 링크를 이용하여 HTML에 링크 붙임
      for i in range(num_pages):
        address = random.choice(self.webpages)
        html += '<a href="' + address + '">' + address + '</a><br>\n'
      
    html += '</body>\n</html>'
    
    return html
  

  #HTTP 메소드 반응 설정
  def do_HEAD(self):
    """Sends header information"""
    
    self.send_response(200)
    self.send_header("Content-type", "text/html")
    self.end_headers()

  # GET 메소드 반응 설정
  def do_GET(self):
    """Responds to any webpage request with a page generated by the generate_page function"""
    
    # sleep으로 딜레이를 두고 반음
    # DELAY should be in milliseconds
    time.sleep(DELAY/1000.0)

    # 반응 설정 - 200 OK / HTTP 헤더 설정 / 전송
    self.send_response(200)
    self.send_header('Content-type', 'text/html')
    self.end_headers()

    # 동적으로 링크 생성한 페이지 전송
    self.wfile.write(self.generate_page(self.path))
  

def print_usage():
  print 'Usage: ' + sys.argv[0] + ' [FILE]\n'
  print 'FILE is file containing a list of webpage names to serve, one per line.  If no file is provided, random links will be generated.'

    
def main():
  if '-h' in sys.argv or '--help' in sys.argv:
    print_usage()
    exit()
    
  
  # 커맨드라인 인자로 파일을 넣으면 이를 이용하여 링크를 제작할 수 있음
  if len(sys.argv) == 2:
    try:
      # read in the file
      f = open(sys.argv[1])
      Handler.webpages = f.readlines()
      f.close()
      
      # check for empty file
      if Handler.webpages == []:
        print 'The file provided was empty.  Using randomly generated links.'
        Handler.webpages = None
    except IOError:
      print 'Can\'t read input file.  Using randomly generated links.'

  # http 서버 시작  
  try:
    print 'Starting server on port %d...' % PORT
    server = BaseHTTPServer.HTTPServer(('', PORT), Handler)
    print 'Server started.  Use <Ctrl-C> to stop.'
    server.serve_forever()
  except KeyboardInterrupt:
    print 'Stopping server...'
    server.socket.close()
    print 'Server stopped'
  except:
    print 'Error starting http server on port %d.' % PORT
    print 'Make sure you are root, if needed, and that port %d is open.' % PORT
  
  
if __name__ == '__main__':
  main()
